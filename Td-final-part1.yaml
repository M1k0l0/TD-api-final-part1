openapi: 3.0.3
info:
  title: STD23037 - TD-final-part1
  version: '1.0.2'
servers:
  - url: https://localhost.std23037.com
paths:
  /competition:
    post:
      tags: 
        - Competition
      summary: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        200:
          description: List of created competition
    get:
      tags: 
        - Competition
      summary: Get a list of competitions
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: A list of competitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competition'
  /team:
    post:
      tags:
        - Teams
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        200:
          description: List of created team
    get:
      tags:
        - Teams
      summary: Get a list of teams
      parameters:
        - name: teamName
          in: query
          required: false
          schema:
            type: string
            description: Filter teams by name
        - name: page
          in: query
          required: true
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: A list of teams
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Team' 
  /teams/{teamId}/players:
    get:
      tags: 
        - List of players for a specific team
      summary: Get a list of players for a specific team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
        - name: playerName
          in: query
          required: false
          schema:
            type: string
            description: Filter players by name
        - name: page
          in: query
          required: true
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            example: 10
      responses:
        200:
          description: A list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
  /teams/{teamId}/players:
    post:
      tags:
        - Add players
      summary: Add players to a team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Player'
      responses:
        200:
          description: Players added to team
components:
  schemas:
    Competition:
      type: object
      properties:
        competitionName:
          type: string
        countryOrContinent:
          type: string

    Team:
      type: object
      properties:
        teamName:
          type: string
        slogan:
          type: string
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'

    Player:
      type: object
      properties:
        playerName:
          type: string
        number:
          type: integer
        strongFoot:
          type: string
          enum: [Left, Right]